% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models.R
\name{NCAR}
\alias{NCAR}
\title{Noisy Completely At Random (NCAR) model}
\usage{
NCAR(data, noise, class.idx = ncol(data), network = NULL)
}
\arguments{
\item{data}{A data frame containing the domain variables.}

\item{noise}{A number between 0 and 1 representing the noise level.}

\item{class.idx}{An optional numeric index for the position of the class
variable in the data frame. It is assumed the last variable in the data.}

\item{network}{A \code{bn} object representing the structure of the golden
Bayesian Network of the domain.}
}
\value{
A list with a \code{bn} object representing the structure and a
\code{bn.fit} object representing the parameterized model.
}
\description{
This function generates and fits NCAR models with a specified noise level.
By default, it employs a hill-climbing algorithm to discover the Bayesian
Network structure. Alternatively, it can accept an \code{bn} object with
a pre-defined structure. The \code{data} argument can receive data frames
with numeric and categorical variables. The NCAR function also assumes the
last variable in the dataset serves as class and automatically renames it
as 'Class' during model creation.
}
\examples{
data(qb)

# The following examples have P(Error = True) = 0.1
# Running the method without a predefined network
model <- NCAR(data = qb, noise = 0.1)
model$parameters$Error
# Running the method with a predefined network
network <- bnlearn::hc(qb)
fit <- bnlearn::bn.fit(network, qb)
model <- NCAR(data = qb, noise = 0.1, network = fit)
model$parameters$Error
}
